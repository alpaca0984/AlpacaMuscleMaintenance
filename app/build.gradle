plugins {
    id 'org.jlleitschuh.gradle.ktlint' version '9.4.0'
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'dagger.hilt.android.plugin'

android {
    signingConfigs {
        release {
            // Store release config at `~/.gradle/gradle.properties`
            // @see https://reactnative.dev/docs/signed-apk-android#setting-up-gradle-variables
            // APM means Alpaca Muscle Maintenance
            if (project.hasProperty('APM_UPLOAD_STORE_FILE')) {
                storeFile file(APM_UPLOAD_STORE_FILE)
                storePassword APM_UPLOAD_STORE_PASSWORD
                keyAlias APM_UPLOAD_KEY_ALIAS
                keyPassword APM_UPLOAD_KEY_PASSWORD
            }
        }
    }
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.example.alpacamusclemaintenance"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.example.alpacamusclemaintenance.AlpacaMuscleMaintenanceTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    buildFeatures {
        dataBinding true
    }
    compileOptions {
        // @see https://developer.android.com/studio/write/java8-support#library-desugaring
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // unit tests - https://developer.android.com/training/testing/unit-testing/local-unit-tests
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    implementation 'junit:junit:4.13'

    // AndroidX core library - https://developer.android.com/training/testing/set-up-project
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'org.mockito:mockito-android:3.3.3'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.2'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Fragment testing - https://developer.android.com/training/basics/fragments/testing#configure
    // for exclusion option have a look at https://github.com/android/android-test/issues/294#issuecomment-506994394
    debugImplementation ('androidx.fragment:fragment-testing:1.2.5') {
        exclude group: 'androidx.test', module : 'core'
    }

    // Support Library Packages - https://developer.android.com/topic/libraries/support-library/packages
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Material Components - https://material.io/develop/android/docs/getting-started/
    implementation 'com.google.android.material:material:1.3.0-alpha02'

    // Lifecycle - https://developer.android.com/jetpack/androidx/releases/lifecycle
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    // Navigation component - https://developer.android.com/guide/navigation/navigation-getting-started
    //   Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    //   Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Room - https://developer.android.com/jetpack/androidx/releases/room
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // WorkManager - https://developer.android.com/jetpack/androidx/releases/work
    implementation "androidx.work:work-runtime-ktx:2.4.0"

    // MPAndroidChart - https://github.com/PhilJay/MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    // Retrofit - https://github.com/square/retrofit
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:4.0.0"

    // Gson - https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // Commons Lang - https://commons.apache.org/proper/commons-lang/
    implementation 'org.apache.commons:commons-lang3:3.9'

    // Glide - https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.7.1'

    // Android KTX - https://github.com/android/android-ktx
    implementation 'androidx.core:core-ktx:1.3.1'

    // kotlinx.coroutines - https://github.com/Kotlin/kotlinx.coroutines
    def coroutines_version = '1.3.7'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Dagger 2 - https://github.com/google/dagger
    def dagger_version = '2.28.3'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Hilt dependencies
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Hilt testing dependencies
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Hilt ViewModel extension
    def hilt_jetpack_version = "1.0.0-alpha02"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_jetpack_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_jetpack_version"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$hilt_jetpack_version"

    // Paging 3 - https://developer.android.com/topic/libraries/architecture/paging/v3-overview
    def paging_version = "3.0.0-alpha06"
    implementation "androidx.paging:paging-runtime:$paging_version"
    // alternatively - without Android dependencies for tests
    testImplementation "androidx.paging:paging-common:$paging_version"

    // Timber - https://github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Flipper - https://fbflipper.com/docs/getting-started/android-native
    debugImplementation 'com.facebook.flipper:flipper:0.57.0'
    debugImplementation 'com.facebook.soloader:soloader:0.9.0'
    debugImplementation 'com.facebook.flipper:flipper-network-plugin:0.57.0'
    releaseImplementation 'com.facebook.flipper:flipper-noop:0.56.0'
}

ktlint {
    android = true
}
